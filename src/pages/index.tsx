import { useState } from 'react';
import type { NextPage } from "next";
import Head from "next/head";
import Mgrs, { LatLon } from 'geodesy/mgrs';
import Utm from 'geodesy/utm.js';
import {
  IconButton,
  InputLabel,
  MenuItem,
  Select,
  TextField
} from '@material-ui/core';
import SwapHorizIcon from '@material-ui/icons/SwapHoriz';

const FromDecimalDegrees = ({ utm, setUTM }) => {
  const latLon = utm?.toLatLon() ?? {lat: 0, lon: 0};
  const [lat, setLat] = useState(latLon.lat);
  const [lon, setLon] = useState(latLon.lon);

  const handleSetLat = (e: any) => {
    setLat(e.target.value);
    const latLon = new LatLon(lat, lon);    
    setUTM(latLon.toUtm());
  }

  const handleSetLon = (e: any) => {
    setLon(e.target.value);
    const latLon = new LatLon(lat, lon);    
    setUTM(latLon.toUtm());
  }

  return (
    <div style={{ margin: "10px" }}>
      <TextField style={{ padding: "10px" }} label="Lat" type="number" value={lat} onChange={handleSetLat} />
      <TextField style={{ padding: "10px" }} label="Lon" type="number" value={lon} onChange={handleSetLon} />
    </div>
  );
}

const ToDecimalDegrees = ({ utm }) => {
  const latLon = utm?.toLatLon() ?? {lat: 0, lon: 0};
  return (
    <div style={{ margin: "10px" }}>
      <p>Decimal Degrees: ({latLon.lat}, {latLon.lon})</p>
    </div>
  );
}

const FromMGRS = ({ utm, setUTM }) => {
  const [mgrs, setMGRS] = useState(utm?.toMgrs() ?? '');
  
  const handleSetMGRS = (e: any) => {
    setMGRS(e.target.value);
    const utm = Mgrs.parse(mgrs).toUtm();
    setUTM(utm);
  }

  return (
    <div style={{ margin: "10px" }}>
      <TextField style={{ padding: "10px" }} label="MGRS" value={mgrs} onChange={handleSetMGRS}/>
    </div>
  );
}

const ToMGRS = ({ utm }) => {
  const mgrs = utm?.toMgrs().toString() ?? '';
  return (
    <div style={{ margin: "10px" }}>
      <p>MGRS: {mgrs}</p>
    </div>
  );
}

const FromUTM = ({ utm, setUTM }) => {  
  const handleSetUTM = (e: any) => {    
    const utm = Utm.parse(e.target.value);
    setUTM(utm);
  }

  return (
    <div style={{ margin: "10px" }}>
      <TextField style={{ padding: "10px" }} label="UTM" onChange={handleSetUTM} defaultValue={utm}/>
    </div>
  );
}

const ToUTM = ({ utm }) => {
  const utmStr = utm?.toString() ?? '';
  return (
    <div style={{ margin: "10px" }}>
      <p>UTM: {utmStr}</p>
    </div>
  );
}

const ConvertFromComponent = ({ type, utm, setUTM }) => {
  switch(type) {
    case 'Decimal Degrees': return <FromDecimalDegrees utm={utm} setUTM={setUTM} />;
    case 'MGRS': return <FromMGRS utm={utm} setUTM={setUTM} />;
    case 'UTM': return <FromUTM utm={utm} setUTM={setUTM} />;
    default: return <div>Unknown type: {type}</div>;
  }
}

const ConvertToComponent = ({ type, utm }) => {
  switch(type) {
    case 'Decimal Degrees': return <ToDecimalDegrees utm={utm} />;
    case 'MGRS': return <ToMGRS utm={utm} />;
    case 'UTM': return <ToUTM utm={utm} />;
    default: return <div>Unknown type: {type}</div>;
  }
}

const Home: NextPage = () => {

  const [utm, setUTM] = useState(null);
  const [convertFrom, setConvertFrom] = useState("Decimal Degrees");
  const [convertTo, setConvertTo] = useState("MGRS");

  const handleConvertFrom = (e: React.ChangeEvent<{
    name?: string | undefined;
    value: string | unknown;
  }>) => {
    if (typeof e.target.value === 'string') {
      setConvertFrom(e.target.value);
    }
  }

  const handleSelectTo = (e: React.ChangeEvent<{
    name?: string | undefined;
    value: string | unknown;
  }>) => {
    if (typeof e.target.value === 'string') {
      setConvertTo(e.target.value);
    }
  }

  const handleSwapCoords = () => {
    setConvertFrom(convertTo);
    setConvertTo(convertFrom);
  }

  return (
    <>
      <Head>
        <title>Coordinate Converter</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <h1>
          Coordinate Converter
        </h1>

        <div style={{ display: "flex", flex: "flex-col" }}>
          <div style={{ margin: "10px" }}>
            <InputLabel id="select-from-label">From</InputLabel>
            <Select
              style={{ width: "160px" }}
              labelId="select-from-label"
              id="select-from"
              value={convertFrom}
              onChange={handleConvertFrom}
            >
              <MenuItem value={"Decimal Degrees"}>Decimal Degrees</MenuItem>
              <MenuItem value={"MGRS"}>MGRS</MenuItem>
              <MenuItem value={"UTM"}>UTM</MenuItem>
            </Select>
          </div>

          <span style={{ margin: "10px" }}>
            <IconButton onClick={handleSwapCoords}>
              <SwapHorizIcon fontSize="large" />
            </IconButton>
          </span>

          <div style={{ margin: "10px" }}>
            <InputLabel id="select-to-label">To</InputLabel>
            <Select
              style={{ width: "160px" }}
              labelId="select-to-label"
              id="select-to"
              value={convertTo}
              onChange={handleSelectTo}
            >
              <MenuItem value={"Decimal Degrees"}>Decimal Degrees</MenuItem>
              <MenuItem value={"MGRS"}>MGRS</MenuItem>
              <MenuItem value={"UTM"}>UTM</MenuItem>
            </Select>
          </div>
        </div>

        <ConvertFromComponent type={convertFrom} utm={utm} setUTM={setUTM} />
        <ConvertToComponent type={convertTo} utm={utm} />
      </div>
    </>
  );
};

export default Home;
